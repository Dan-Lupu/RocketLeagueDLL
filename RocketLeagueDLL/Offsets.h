#pragma once
namespace Offsets
{
	namespace Classes
	{
		// Inheritance: AController > AActor > UObject
		namespace APlayerController
		{
			constexpr auto Player = 0x478; // UPlayer*
			constexpr auto PlayerCamera = 0x480; // ACamera*
			constexpr auto CameraClass = 0x488; // FNone*
			constexpr auto bFrozen = 0x490; // uint32_t : 1
			constexpr auto bPressedJump = 0x490; // uint32_t : 1
			constexpr auto bDoubleJump = 0x490; // uint32_t : 1
			constexpr auto bUpdatePosition = 0x490; // uint32_t : 1
			constexpr auto bUpdating = 0x490; // uint32_t : 1
			constexpr auto bCheatFlying = 0x490; // uint32_t : 1
			constexpr auto bCameraPositionLocked = 0x490; // uint32_t : 1
			constexpr auto bShortConnectTimeOut = 0x490; // uint32_t : 1
			constexpr auto bPendingDestroy = 0x490; // uint32_t : 1
			constexpr auto bWasSpeedHack = 0x490; // uint32_t : 1
			constexpr auto bWasSaturated = 0x490; // uint32_t : 1
			constexpr auto bAimingHelp = 0x490; // uint32_t : 1
			constexpr auto bCameraCut = 0x490; // uint32_t : 1
			constexpr auto bClientSimulatingViewTarget = 0x490; // uint32_t : 1
			constexpr auto bHasVoiceHandshakeCompleted = 0x490; // uint32_t : 1
			constexpr auto bIsChatBanned = 0x490; // uint32_t : 1
			constexpr auto bIsSocialBanned = 0x490; // uint32_t : 1
			constexpr auto bCinematicMode = 0x490; // uint32_t : 1
			constexpr auto bInteractiveMode = 0x490; // uint32_t : 1
			constexpr auto bCinemaDisableInputMove = 0x490; // uint32_t : 1
			constexpr auto bCinemaDisableInputLook = 0x490; // uint32_t : 1
			constexpr auto bIgnoreNetworkMessages = 0x490; // uint32_t : 1
			constexpr auto bShowKismetDrawText = 0x490; // uint32_t : 1
			constexpr auto bReplicateAllPawns = 0x490; // uint32_t : 1
			constexpr auto bIsUsingStreamingVolumes = 0x490; // uint32_t : 1
			constexpr auto bIsExternalUIOpen = 0x490; // uint32_t : 1
			constexpr auto bIsControllerConnected = 0x490; // uint32_t : 1
			constexpr auto bCheckSoundOcclusion = 0x490; // uint32_t : 1
			constexpr auto bDebugCameraAnims = 0x490; // uint32_t : 1
			constexpr auto bBlockCameraAnimsFromOverridingPostProcess = 0x490; // uint32_t : 1
			constexpr auto bLogHearSoundOverflow = 0x490; // uint32_t : 1
			constexpr auto bCheckRelevancyThroughPortals = 0x490; // uint32_t : 1
			constexpr auto bDebugClientAdjustPosition = 0x494; // uint32_t : 1
			constexpr auto MaxResponseTime = 0x498; // float
			constexpr auto WaitDelay = 0x49c; // float
			constexpr auto AcknowledgedPawn = 0x4a0; // APawn*
			constexpr auto DoubleClickDir = 0x4a8; // EDoubleClickDir
			constexpr auto bIgnoreMoveInput = 0x4a9; // char
			constexpr auto bIgnoreLookInput = 0x4aa; // char
			constexpr auto bRun = 0x4ab; // char
			constexpr auto bDuck = 0x4ac; // char
			constexpr auto NetPlayerIndex = 0x4ad; // char
			constexpr auto ViewTarget = 0x4b0; // AActor*
			constexpr auto RealViewTarget = 0x4b8; // APlayerReplicationInfo*
			constexpr auto ControllingDirTrackInst = 0x4c0; // UInterpTrackInstDirector*
			constexpr auto FOVAngle = 0x4c8; // float
			constexpr auto DesiredFOV = 0x4cc; // float
			constexpr auto DefaultFOV = 0x4d0; // float
			constexpr auto LODDistanceFactor = 0x4d4; // float
			constexpr auto TargetViewRotation = 0x4d8; // FRotator
			constexpr auto TargetEyeHeight = 0x4e4; // float
			constexpr auto BlendedTargetViewRotation = 0x4e8; // FRotator
			constexpr auto myHUD = 0x4f8; // AHUD*
			constexpr auto mySecondaryHUD = 0x500; // AHUD*
			constexpr auto SavedMoveClass = 0x508; // FNone*
			constexpr auto SavedMoves = 0x510; // USavedMove*
			constexpr auto FreeMoves = 0x518; // USavedMove*
			constexpr auto PendingMove = 0x520; // USavedMove*
			constexpr auto LastAckedAccel = 0x528; // FVector
			constexpr auto CurrentTimeStamp = 0x534; // float
			constexpr auto LastUpdateTime = 0x538; // float
			constexpr auto ServerTimeStamp = 0x53c; // float
			constexpr auto TimeMargin = 0x540; // float
			constexpr auto ClientUpdateTime = 0x544; // float
			constexpr auto MaxTimeMargin = 0x548; // float
			constexpr auto LastActiveTime = 0x54c; // float
			constexpr auto DynamicPingThreshold = 0x550; // float
			constexpr auto LastPingUpdate = 0x554; // float
			constexpr auto LastSpeedHackLog = 0x558; // float
			constexpr auto PendingAdjustment = 0x560; // FClientAdjustment
			constexpr auto GroundPitch = 0x598; // int32_t
			constexpr auto CheatManager = 0x5a0; // UCheatManager*
			constexpr auto CheatClass = 0x5a8; // FNone*
			constexpr auto PlayerInput = 0x5b0; // UPlayerInput*
			constexpr auto InputClass = 0x5b8; // FNone*
			constexpr auto FailedPathStart = 0x5c0; // FVector
			constexpr auto CylinderComponent = 0x5d0; // UCylinderComponent*
			constexpr auto ForceFeedbackManagerClassName = 0x5d8; // FString
			constexpr auto ForceFeedbackManager = 0x5e8; // UForceFeedbackManager*
			constexpr auto Interactions = 0x5f0; // TArray<UInteraction*>
			constexpr auto VoiceMuteList = 0x600; // TArray<FUniqueNetId>
			constexpr auto GameplayVoiceMuteList = 0x610; // TArray<FUniqueNetId>
			constexpr auto VoicePacketFilter = 0x620; // TArray<FUniqueNetId>
			constexpr auto ConnectedPeers = 0x630; // TArray<FConnectedPeerInfo>
			constexpr auto BestNextHostPeers = 0x640; // TArray<FUniqueNetId>
			constexpr auto MigratedSearchToJoin = 0x650; // UOnlineGameSearch*
			constexpr auto OnlineSub = 0x658; // UOnlineSubsystem*
			constexpr auto VoiceInterface = 0x660; // TScriptInterface<Class>
			constexpr auto OnlinePlayerData = 0x670; // UUIDataStore_OnlinePlayerData*
			constexpr auto InteractDistance = 0x678; // float
			constexpr auto DelayedJoinSessionName = 0x67c; // FName
			constexpr auto InputRequests = 0x688; // TArray<FInputMatchRequest>
			constexpr auto LastBroadcastTime = 0x698; // float
			constexpr auto LastBroadcastString0x4 = 0x6a0; // FString
			constexpr auto PendingMapChangeLevelNames = 0x6e0; // TArray<FName>
			constexpr auto MyCoverReplicator = 0x6f0; // ACoverReplicator*
			constexpr auto DebugTextList = 0x6f8; // TArray<FDebugTextInfo>
			constexpr auto SpectatorCameraSpeed = 0x708; // float
			constexpr auto PendingSwapConnection = 0x710; // UNetConnection*
			constexpr auto MinRespawnDelay = 0x718; // float
			constexpr auto MaxConcurrentHearSounds = 0x71c; // int32_t
			constexpr auto HearSoundActiveComponents = 0x720; // TArray<UAudioComponent*>
			constexpr auto HearSoundPoolComponents = 0x730; // TArray<UAudioComponent*>
			constexpr auto HiddenActors = 0x740; // TArray<AActor*>
			constexpr auto LastSpectatorStateSynchTime = 0x750; // float
			constexpr auto __EventConnectionTimedOut__Delegate = 0x758; // DelegateProperty
			constexpr auto __OnMissingPeersUnregistered__Delegate = 0x770; // DelegateProperty
			constexpr auto __CanUnpause__Delegate = 0x788; // DelegateProperty
			constexpr auto __InputMatchDelegate__Delegate = 0x7a0; // DelegateProperty
		}
		namespace Classes
		{
			// Inheritance: 
			namespace UObject
			{
				constexpr auto VfTableObject = 0x0; // FPointer
				constexpr auto HashNext = 0x8; // FPointer
				constexpr auto ObjectFlags = 0x10; // QWordProperty
				constexpr auto HashOuterNext = 0x18; // FPointer
				constexpr auto StateFrame = 0x20; // FPointer
				constexpr auto Linker = 0x28; // UObject*
				constexpr auto LinkerIndex = 0x30; // FPointer
				constexpr auto ObjectInternalInteger = 0x38; // int32_t
				constexpr auto NetIndex = 0x3c; // int32_t
				constexpr auto Outer = 0x40; // UObject*
				constexpr auto Name = 0x48; // FName
				constexpr auto Class = 0x50; // FNone*
				constexpr auto ObjectArchetype = 0x58; // UObject*
			}
			// Inheritance: UObject
			namespace AActor
			{
				constexpr auto ActorDependantPSCs = 0x60; // TArray<UParticleSystemComponent*>
				constexpr auto Components = 0x70; // TArray<UActorComponent*>
				constexpr auto AllComponents = 0x80; // TArray<UActorComponent*>
				constexpr auto Location = 0x90; // FVector
				constexpr auto Rotation = 0x9c; // FRotator
				constexpr auto DrawScale = 0xa8; // float
				constexpr auto DrawScale3D = 0xac; // FVector
				constexpr auto PrePivot = 0xb8; // FVector
				constexpr auto EditorIconColor = 0xc4; // FColor
				constexpr auto DetachFence = 0xc8; // FRenderCommandFence
				constexpr auto CustomTimeDilation = 0xcc; // float
				constexpr auto Physics = 0xd0; // EPhysics
				constexpr auto RemoteRole = 0xd1; // ENetRole
				constexpr auto Role = 0xd2; // ENetRole
				constexpr auto CollisionType = 0xd3; // ECollisionType
				constexpr auto ReplicatedCollisionType = 0xd4; // ECollisionType
				constexpr auto TickGroup = 0xd5; // ETickingGroup
				constexpr auto Owner = 0xd8; // AActor*
				constexpr auto Base = 0xe0; // AActor*
				constexpr auto Timers = 0xe8; // TArray<FTimerData>
				constexpr auto bStatic = 0xf8; // uint32_t : 1
				constexpr auto bHidden = 0xf8; // uint32_t : 1
				constexpr auto bHiddenSelf = 0xf8; // uint32_t : 1
				constexpr auto bNoDelete = 0xf8; // uint32_t : 1
				constexpr auto bDeleteMe = 0xf8; // uint32_t : 1
				constexpr auto bTicked = 0xf8; // uint32_t : 1
				constexpr auto bOnlyOwnerSee = 0xf8; // uint32_t : 1
				constexpr auto bTickIsDisabled = 0xf8; // uint32_t : 1
				constexpr auto bWorldGeometry = 0xf8; // uint32_t : 1
				constexpr auto bIgnoreRigidBodyPawns = 0xf8; // uint32_t : 1
				constexpr auto bOrientOnSlope = 0xf8; // uint32_t : 1
				constexpr auto bIgnoreEncroachers = 0xf8; // uint32_t : 1
				constexpr auto bPushedByEncroachers = 0xf8; // uint32_t : 1
				constexpr auto bDestroyedByInterpActor = 0xf8; // uint32_t : 1
				constexpr auto bRouteBeginPlayEvenIfStatic = 0xf8; // uint32_t : 1
				constexpr auto bIsMoving = 0xf8; // uint32_t : 1
				constexpr auto bAlwaysEncroachCheck = 0xf8; // uint32_t : 1
				constexpr auto bHasAlternateTargetLocation = 0xf8; // uint32_t : 1
				constexpr auto bCanStepUpOn = 0xf8; // uint32_t : 1
				constexpr auto bNetTemporary = 0xf8; // uint32_t : 1
				constexpr auto bOnlyRelevantToOwner = 0xf8; // uint32_t : 1
				constexpr auto bNetDirty = 0xf8; // uint32_t : 1
				constexpr auto bAlwaysRelevant = 0xf8; // uint32_t : 1
				constexpr auto bReplicateInstigator = 0xf8; // uint32_t : 1
				constexpr auto bReplicateMovement = 0xf8; // uint32_t : 1
				constexpr auto bSkipActorPropertyReplication = 0xf8; // uint32_t : 1
				constexpr auto bUpdateSimulatedPosition = 0xf8; // uint32_t : 1
				constexpr auto bTearOff = 0xf8; // uint32_t : 1
				constexpr auto bOnlyDirtyReplication = 0xf8; // uint32_t : 1
				constexpr auto bAllowFluidSurfaceInteraction = 0xf8; // uint32_t : 1
				constexpr auto bDemoRecording = 0xf8; // uint32_t : 1
				constexpr auto bDemoOwner = 0xf8; // uint32_t : 1
				constexpr auto bForceDemoRelevant = 0xfc; // uint32_t : 1
				constexpr auto bNetInitialRotation = 0xfc; // uint32_t : 1
				constexpr auto bReplicateRigidBodyLocation = 0xfc; // uint32_t : 1
				constexpr auto bKillDuringLevelTransition = 0xfc; // uint32_t : 1
				constexpr auto bExchangedRoles = 0xfc; // uint32_t : 1
				constexpr auto bConsiderAllStaticMeshComponentsForStreaming = 0xfc; // uint32_t : 1
				constexpr auto bDebug = 0xfc; // uint32_t : 1
				constexpr auto bPostRenderIfNotVisible = 0xfc; // uint32_t : 1
				constexpr auto bForceNetUpdate = 0xfc; // uint32_t : 1
				constexpr auto bForcePacketUpdate = 0xfc; // uint32_t : 1
				constexpr auto bPendingNetUpdate = 0xfc; // uint32_t : 1
				constexpr auto bHardAttach = 0xfc; // uint32_t : 1
				constexpr auto bIgnoreBaseRotation = 0xfc; // uint32_t : 1
				constexpr auto bShadowParented = 0xfc; // uint32_t : 1
				constexpr auto bSkipAttachedMoves = 0xfc; // uint32_t : 1
				constexpr auto bCanBeAdheredTo = 0xfc; // uint32_t : 1
				constexpr auto bCanBeFrictionedTo = 0xfc; // uint32_t : 1
				constexpr auto bGameRelevant = 0xfc; // uint32_t : 1
				constexpr auto bMovable = 0xfc; // uint32_t : 1
				constexpr auto bShouldBaseAtStartup = 0xfc; // uint32_t : 1
				constexpr auto bPendingDelete = 0xfc; // uint32_t : 1
				constexpr auto bCanTeleport = 0xfc; // uint32_t : 1
				constexpr auto bAlwaysTick = 0xfc; // uint32_t : 1
				constexpr auto bBlocksNavigation = 0xfc; // uint32_t : 1
				constexpr auto BlockRigidBody = 0xfc; // uint32_t : 1
				constexpr auto bCollideWhenPlacing = 0xfc; // uint32_t : 1
				constexpr auto bCollideActors = 0xfc; // uint32_t : 1
				constexpr auto bCollideWorld = 0xfc; // uint32_t : 1
				constexpr auto bCollideComplex = 0xfc; // uint32_t : 1
				constexpr auto bBlockActors = 0xfc; // uint32_t : 1
				constexpr auto bBlocksTeleport = 0xfc; // uint32_t : 1
				constexpr auto bMoveIgnoresDestruction = 0xfc; // uint32_t : 1
				constexpr auto bProjectileMoveSingleBlocking = 0x100; // uint32_t : 1
				constexpr auto bNoEncroachCheck = 0x100; // uint32_t : 1
				constexpr auto bCollideAsEncroacher = 0x100; // uint32_t : 1
				constexpr auto bPhysRigidBodyOutOfWorldCheck = 0x100; // uint32_t : 1
				constexpr auto bComponentOutsideWorld = 0x100; // uint32_t : 1
				constexpr auto bForceOctreeSNFilter = 0x100; // uint32_t : 1
				constexpr auto bForceOctreeMNFilter = 0x100; // uint32_t : 1
				constexpr auto bRigidBodyWasAwake = 0x100; // uint32_t : 1
				constexpr auto bCallRigidBodyWakeEvents = 0x100; // uint32_t : 1
				constexpr auto bBounce = 0x100; // uint32_t : 1
				constexpr auto bJustTeleported = 0x100; // uint32_t : 1
				constexpr auto bEnableMobileTouch = 0x100; // uint32_t : 1
				constexpr auto bNetInitial = 0x100; // uint32_t : 1
				constexpr auto bNetOwner = 0x100; // uint32_t : 1
				constexpr auto bHiddenEd = 0x100; // uint32_t : 1
				constexpr auto bEditable = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdGroup = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdLayer = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdCustom = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdTemporary = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdLevel = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdScene = 0x100; // uint32_t : 1
				constexpr auto bHiddenEdNoPhysics = 0x100; // uint32_t : 1
				constexpr auto bEdShouldSnap = 0x100; // uint32_t : 1
				constexpr auto bTempEditor = 0x100; // uint32_t : 1
				constexpr auto bPathColliding = 0x100; // uint32_t : 1
				constexpr auto bPathTemp = 0x100; // uint32_t : 1
				constexpr auto bScriptInitialized = 0x100; // uint32_t : 1
				constexpr auto bLockLocation = 0x100; // uint32_t : 1
				constexpr auto bForceAllowKismetModification = 0x100; // uint32_t : 1
				constexpr auto bDedicatedServerRelevant = 0x100; // uint32_t : 1
				constexpr auto bLockedFromEditorDeletion = 0x100; // uint32_t : 1
				constexpr auto bComponentsDirty = 0x104; // uint32_t : 1
				constexpr auto bUpdateComponentsIfEmpty = 0x104; // uint32_t : 1
				constexpr auto bDebugEffectIsRelevant = 0x104; // uint32_t : 1
				constexpr auto SkelMeshCompTickTag = 0x108; // int32_t
				constexpr auto NetTag = 0x10c; // int32_t
				constexpr auto NetUpdateTime = 0x110; // float
				constexpr auto NetUpdateFrequency = 0x114; // float
				constexpr auto NetPriority = 0x118; // float
				constexpr auto LastNetUpdateTime = 0x11c; // float
				constexpr auto LastForcePacketUpdateTime = 0x120; // float
				constexpr auto TimeSinceLastTick = 0x124; // float
				constexpr auto Instigator = 0x128; // APawn*
				constexpr auto WorldInfo = 0x130; // AWorldInfo*
				constexpr auto LifeSpan = 0x138; // float
				constexpr auto CreationTime = 0x13c; // float
				constexpr auto LastRenderTime = 0x140; // float
				constexpr auto Tag = 0x144; // FName
				constexpr auto InitialState = 0x14c; // FName
				constexpr auto Layer = 0x154; // FName
				constexpr auto Group = 0x15c; // FName
				constexpr auto HiddenEditorViews = 0x168; // QWordProperty
				constexpr auto Touching = 0x170; // TArray<AActor*>
				constexpr auto Children = 0x180; // TArray<AActor*>
				constexpr auto LatentFloat = 0x190; // float
				constexpr auto LatentSeqNode = 0x198; // UAnimNodeSequence*
				constexpr auto PhysicsVolume = 0x1a0; // APhysicsVolume*
				constexpr auto Velocity = 0x1a8; // FVector
				constexpr auto Acceleration = 0x1b4; // FVector
				constexpr auto AngularVelocity = 0x1c0; // FVector
				constexpr auto BaseSkelComponent = 0x1d0; // USkeletalMeshComponent*
				constexpr auto BaseBoneName = 0x1d8; // FName
				constexpr auto Attached = 0x1e0; // TArray<AActor*>
				constexpr auto RelativeLocation = 0x1f0; // FVector
				constexpr auto RelativeRotation = 0x1fc; // FRotator
				constexpr auto CollisionComponent = 0x208; // UPrimitiveComponent*
				constexpr auto OverlapTag = 0x210; // int32_t
				constexpr auto RotationRate = 0x214; // FRotator
				constexpr auto PendingTouch = 0x220; // AActor*
				constexpr auto SupportedEvents = 0x228; // TArray<FNone*>
				constexpr auto GeneratedEvents = 0x238; // TArray<USequenceEvent*>
				constexpr auto LatentActions = 0x248; // TArray<USeqAct_Latent*>
				constexpr auto IgnoredTouchClasses = 0x258; // TArray<FNone*>
			}
		}
	}
}